{
  "hash": "4fcc38d543ad133388d63ac9ae9ab07c",
  "result": {
    "markdown": "---\ntitle: \"Kyoto Cherry Blossom Trend (812-2015): Recreating Our World in Data's Visualization\"\ndescription: |\n  This tutorial aims to recreate an intriguing visual by Our World in Data. My objective is to practice and improve my visualization skills and help those new to R programming and the ggplot2 library (I could have done this with the pandas and seaborn libraries; however, I am more comfortable with the ggplot2).   \ncategories:\n  - Data Visualization \n  - R\nauthor: Alier Reng\ndate: 2024-03-09\ndate-format: \"D MMMM YYYY\"\nimage: images/cherry_trees_blossom.png\nimage-alt: Blossoming of the Kyoto cherry trees\ntoc: true\nfilters:\n  - lightbox\nlightbox: auto\n\ncode-block-bg: true\ncode-block-border-left: \"#31BAE9\"\neditor: visual\n---\n\n\n# Motivation\n\n> The greatest value of a picture is when it forces us to notice what we never expected to see.\n> \\~ John Tukey\n\nYesterday, Matt Harrison shared his recreation of Our World In Data's graphical trend of Kyoto's Cherry trees blossoming, encouraging other data scientists and analysts to try it out to enhance their visualization skills.\n\\\n\\\nIn my humble opinion, replicating others' work is an effective learning strategy.\nAs a result, this tutorial aims to recreate an intriguing visual by Our World in Data.\nMy objective is to practice and improve my visualization skills and help those new to R programming and the ggplot2 library (I could have done this with the pandas and seaborn libraries; however, I am more comfortable with the ggplot2).\n\n# Getting Started\n\n## Loading the Required Libraries\n\nIn this tutorial, I will load two packages - `tidyverse` and `ggtext`.\nLater, in the visualization section, I will use the `ggthemes` package and call it directly since I need a single theme to enhance my plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Libraries ------\nlibrary(tidyverse)\nlibrary(ggtext)\n```\n:::\n\n\n# Data Wrangling and Visualization\n\n## Cleaning and Transforming data\n\n### Importing the Dataset\n\nIn this section, I will use the link from **Matt Harrison's** post to load the **Kyoto Full Flower 7** dataset.\nAfter loading the data, I will write a function to clean and transform it and demonstrate how to write a function in `R`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the dataset\ncherry_raw <-\n  readxl::read_excel(\n    \"KyotoFullFlower7.xls\",\n    skip = 25\n  ) |>\n  janitor::clean_names() |>\n  select(\n    year = ad,\n    flowering_day_of_year = full_flowering_date_doy,\n    flowering_month = full_flowering_date\n  ) |>\n  mutate(\n    date = str_c(year,\n      str_sub(flowering_month, 1, 1),\n      str_sub(flowering_month, 2, 3),\n      sep = \"-\"\n    )\n  ) |>\n  filter(!is.na(date)) |>\n  mutate(\n    rolling_day_of_year = slider::slide_dbl(\n      flowering_day_of_year,\n      mean,\n      .before = 20,\n      .complete = TRUE\n    )\n  )\n```\n:::\n\n\nIn the code snippet above, I used the `read_excel()` function from the `readxl` package to read the **KyotoFullFlower7.xls** dataset.\nI then skipped the first **25** rows with the `skip()` argument, converted column names to `snakecase` using the `clean_names()` function from the `janitor` package, and selected and renamed the columns of interest with the `select()` function from the `dplyr` package.\n\n\nAfter that, I created a new column named \"date\" by combining the year with the month and day portions of the \"flowering_month\" column.\nI used the `str_c()` and `str_sub()` functions from the `stringr` package for this purpose.\nThe new column values were separated by a hyphen (\"-\") to look like \"year-month-day,\" for example, \"815-4-15\".\nThen, I removed missing or NA values from the new date column using the `filter()` function from the dplyr package.\n\n\nFinally, I calculated the mean \"rolling_day_of_year\" with the `slide_dbl()` function from the `slider` package.\nI used a *20-year window* and the values were calculated from the **flowering_day_of_year**.\n\n### Writing a Function\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define a function for cleaning and transforming dataset\ntweak_cherry_trees_data <- function(data,\n                                    window,\n                                    cols) {\n  data |>\n    janitor::clean_names() |>\n    select({{ cols }}) |>\n    mutate(\n      date = str_c(year,\n        str_sub(flowering_month, 1, 1),\n        str_sub(flowering_month, 2, 3),\n        sep = \"-\"\n      )\n    ) |>\n    filter(!is.na(date)) |>\n    mutate(\n      rolling_day_of_year = slider::slide_dbl(\n        flowering_day_of_year,\n        mean,\n        .before = {{ window }},\n        .complete = TRUE\n      )\n    )\n}\n```\n:::\n\n\nIn the above code snippet, I wrote a data cleaning and transformation function using the code in the preceding section.\nI will not dive deep into the mechanics of function writing in R in this section; those interested can read more about [R function writing here.](https://r4ds.hadley.nz/functions \"R for Data Science, 2nd edition\")\n\n### Testing the Function\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let's test our new function\ncherry_trees_raw <-\n  readxl::read_excel(\n    \"KyotoFullFlower7.xls\",\n    skip = 25\n  )\n\n# Clean and transform the data\ncherry_trees_data_tbl <-\n  tweak_cherry_trees_data(\n    cherry_trees_raw,\n    cols = c(\n      year = ad,\n      flowering_day_of_year = full_flowering_date_doy,\n      flowering_month = full_flowering_date\n    ),\n    window = 20\n  )\n```\n:::\n\n\nMy new function worked well, and I can now use it to update my analysis of the cherry trees blossoming in Kyoto whenever necessary.\n\n## Plotting Cherry Trees Data\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Plot cherry trees data ------\ncherry_trees_data_tbl |>\n  ggplot(aes(year, flowering_day_of_year)) +\n  geom_point(na.rm = TRUE, size = 0.8) +\n  geom_line(\n  \taes(y = rolling_day_of_year),\n    na.rm = TRUE,\n    linewidth = 1.2,\n    color = \"#5e2ce8\"\n  ) +\n  annotate(\n    \"text\",\n    x = 1990,\n    y = 90,\n    label = \"20-Year\\n Average\",\n    color = \"#5e2ce8\",\n    size = 8,\n    na.rm = TRUE\n  ) +\n  scale_x_continuous(\n    limits = c(812, 2015),\n    breaks = c(812, 1000, 1200, 1400, 1600, 1800, 2023)\n  ) +\n  scale_y_continuous(\n    limits = c(70, 120),\n    labels = c(\n      \"March 11\", \"March 21\", \"March 31\",\n      \"April 10\", \"April 20\", \"April 30\"\n    )\n  ) +\n  ggthemes::theme_wsj() +\n  labs(\n    title = \"Cherry trees have been blossoming earlier due to warmer spring temperatures\",\n    subtitle = \"Date of peak cherry tree (***Prunus jamasakura***) in Kyoto, Japan\",\n    caption = \"**Data Source: Yasuk Aono (2021:2024)**<br>**Note:** The <span style='color: #5e2ce8'>20-year average</span> is calculated when there are at least five years with data in the <span style='color: #5e2ce8'>20-year window</span>. The dates are off by one day on the years.<br><br>\n\t\tOurWorldInData.org/biodiversity|CC BY\n\t\t\"\n  ) +\n  theme(\n    plot.title = element_textbox_simple(\n      size = 30,\n      margin = margin(t = 15, r = 0, b = 5, l = 0),\n      lineheight = 1.2,\n      linewidth = 0.3\n    ),\n    plot.title.position = \"plot\",\n    plot.subtitle = element_textbox_simple(\n      size = 20,\n      hjust = 0,\n      margin = margin(t = 15, r = 0, b = 15, l = 0),\n      lineheight = 1.2,\n      linewidth = 0.1\n    ),\n    axis.text = element_textbox(\n    \tsize = 13, \n    \tcolor = \"darkgray\"\n    ),\n    plot.caption = element_textbox_simple(\n      size = 20,\n      margin = margin(t = 15, r = 0, b = 10, l = 0),\n      lineheight = 1.2,\n      linewidth = 0.1\n    ),\n    axis.line = element_line(color = \"darkgray\"),\n    axis.ticks = element_line(color = \"darkgray\"),\n    plot.caption.position = \"plot\",\n    plot.margin = margin(15, 15, 15, 15)\n  )\n```\n\n::: {.cell-output-display}\n![Kyoto Cherry trees trend since 812](tutorial-03_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=1056}\n:::\n:::\n\n\nI created a scatter plot with the x-axis representing the year and the y-axis representing the flowering day of the year.\nTo do this, I used the `geom_point()` function and set the point size to 0.8.\nI also plotted a line graph of the 20-year rolling average using the `geom_line()` function.\nI made the line thicker and colored it in purplish color.\nI added a text label \"20-year average\" using the `annotate()` function and modified its location, color, and size as shown above.\n\n\nTo make the plot resemble that of Our World In Data graph, I controlled the axes by setting the limits, breaks, and labels accordingly.\nI used **Matt Harrison's** code along with the original graph as a guide.\nAdditionally, I used the `theme_wsj()` function from the `ggthemes` package to mimic the original graph.\n\nFinally, I polished the plot with the `theme()` function to make it look as much as possible like the original plot.\nI will not explain every argument here for the sake of time.\n\n# Final Thoughts\n\nIn this tutorial, I demonstrated how to load **KyotoFullFlower7.xls**, clean and transform it, write a function that automates the wrangling process, and visualize the cleaned data to replicate the original graph.\\\nThis simple recreation of the Our World In Data graphic has become a beautiful tutorial worthwhile for those interested in data visualization with the ggplot2 package.\\\nMy goal was to recreate the plot and help those new to R learn how to do the same thing.\n\nOverall, this tutorial demonstrates how to recreate a visually informative plot showcasing the trend of cherry blossom flowering dates in Kyoto, Japan, with annotations and proper citation.\\\nPlease leave us a comment, share our tutorial, try it yourself, and share your work with me and the Data Science Community.\n\n# Acknowledgements\n\nI would like to express my gratitude to **Matt Harrison** for introducing me to this excellent exercise and for being a constant source of inspiration.\nAdditionally, I extend my thanks to **Our World In Data** for their valuable contributions and for making the data accessible to everyone for practice purposes.\n",
    "supporting": [
      "tutorial-03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}