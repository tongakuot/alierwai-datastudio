{
  "hash": "38beadaad2c6946d328503f0797cbd28",
  "result": {
    "markdown": "---\ntitle: \"Showcasing dplyr case_when() Function\"\ndescription: |\n  While reading Effective Pandas 2 by Matt Harrison, I learned about the new case_when() method in Pandas 2, which is a total life changer for pandas users who have longed for such a function for a long time. However, as an R programmer, I decided to review the dplyr case_when() documentation and learned that this \"lifesaving\" function has been updated.  \ncategories:\n  - Data Science \n  - Data Wrangling\n  - R\n  - Tutorial\nauthor: Alier Reng\ndate: 2024-01-04\ndate-format: \"D MMMM YYYY\"\nimage: images/case_when_img.png\nimage-alt: case_when() function\ntoc: true\nfilters:\n  - lightbox\nlightbox: auto\n\ncode-block-bg: true\ncode-block-border-left: \"#31BAE9\"\n---\n\n\n# Motivation\n\nWhile reading **Effective Pandas 2** by **Matt Harrison**, I learned about the new `case_when()` method in **Pandas 2**, which is a total life changer for `pandas` users who have longed for such a function for a long time.\nHowever, as an R programmer, I decided to review the `dplyr case_when()` documentation and learned that this **lifesaving** function has been updated.\nThe recently released version of the `case_when()` function now includes the following arguments:\n\n> case_when(..., .default = NULL, .ptype = NULL, .size = NULL)\n\nYou can read more about these arguments [here!](https://dplyr.tidyverse.org/reference/case_when.html)\n\nThe most notable change is the replacement of `TRUE ~ some value` with `.default = some value` argument.\n\n# Introduction\n\nThe `case_when()` function from the dplyr package in provides a flexible way to create conditional statements based on multiple conditions.\n\nThe [dplyr website](https://dplyr.tidyverse.org/reference/case_when.html) describes this amazing function as follows:\n\n> This function allows you to vectorise multiple [`if_else()`](https://dplyr.tidyverse.org/reference/if_else.html) statements.\n> Each case is evaluated sequentially and the first match for each element determines the corresponding value in the output vector.\n> If no cases match, the `.default` is used as a final \"else\" statment.\n>\n> `case_when()` is an R equivalent of the SQL \"searched\" `CASE WHEN` statement.\n\n## Loading the Required Libraries\n\nWe will load the entire tidyverse package for this tutorial, although we will only use the dplyr and stringr packages.\nAdditionally, we will suppress warnings and notifications by setting warning and message to false, respectively.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n## Importing dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nssd_census_2008 <-\n  vroom::vroom(\n    \"ss_2008_census_data_raw.csv\",\n    show_col_types = FALSE\n  ) |>\n  select(\n    state        = `Region Name`,\n    gender       = `Variable Name`,\n    age_category = `Age Name`,\n    population   = `2008`\n  ) |>\n  # Showcase case_when() function\n  filter(\n    !is.na(gender),\n    age_category != \"Total\"\n  ) |>\n  mutate(\n    state = state |> str_to_lower(),\n    former_region = case_when(\n      str_detect(state, \"equatoria\")  ~ \"Greater Equatoria\",\n      str_detect(state, \"upper nile\") ~ \"Greater Upper Nile\",\n      str_detect(state, \"unity\")      ~ \"Greater Upper Nile\",\n      str_detect(state, \"jonglei\")    ~ \"Greater Upper Nile\",\n      .default = \"Greater Bahr el Ghazal\"\n    )\n  ) |>\n  mutate(\n    age_category = case_when(\n      age_category %in% c(\"0 to 4\", \"5 to 9\", \"10 to 14\") ~ \"0-14\",\n      age_category %in% c(\"15 to 19\", \"20 to 24\") ~ \"15-24\",\n      age_category %in% c(\"25 to 29\", \"30 to 34\") ~ \"25-34\",\n      age_category %in% c(\"35 to 39\", \"40 to 44\") ~ \"35-44\",\n      age_category %in% c(\"45 to 49\", \"50 to 54\") ~ \"45-54\",\n      age_category %in% c(\"55 to 59\", \"60 to 64\") ~ \"55-64\",\n      .default = \"65+\"\n    )\n  )\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}